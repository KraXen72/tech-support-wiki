import{_ as s,c as a,o as n,N as o}from"./chunks/framework.54f67b00.js";const C=JSON.parse('{"title":"js method chaining","description":"","frontmatter":{"title":"js method chaining"},"headers":[],"relativePath":"javascript/js-method-chaining.md"}'),l={name:"javascript/js-method-chaining.md"},e=o(`<h1 id="js-method-chaining-it-s-beautiful" tabindex="-1">js method chaining (it’s beautiful) <a class="header-anchor" href="#js-method-chaining-it-s-beautiful" aria-label="Permalink to &quot;js method chaining (it’s beautiful)&quot;">​</a></h1><p>One of the best things you can do in js, is chain methods. more info <a href="https://schier.co/blog/method-chaining-in-javascript" target="_blank" rel="noreferrer">here</a> but here are some examples:</p><h2 id="example-1-string" tabindex="-1">example 1: string <a class="header-anchor" href="#example-1-string" aria-label="Permalink to &quot;example 1: string&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> prependName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fullpath</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(filename</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??filename</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(basedDir</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??basedDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(slash)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">part</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??basedDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??filename</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(part))</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(pslash)</span></span>
<span class="line"></span></code></pre></div><p>first replaces some stuff, then splits (now we have an array), filter the array and join back into a string. This one was pretty easy, but this feature is really powerful. Let&#39;s see another example:</p><h2 id="example-2-grabbing-and-filtering-links-from-site" tabindex="-1">example 2: grabbing and filtering links from site <a class="header-anchor" href="#example-2-grabbing-and-filtering-links-from-site" aria-label="Permalink to &quot;example 2: grabbing and filtering links from site&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a[href]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startsWith</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://videoportal.joj.sk/prazdniny/epizoda</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>this particular snippet lets you grab all links to episodes of the TV series &#39;Prázdniny&#39; from joj.sk.<br> you could use the same approach to grab any anime/tvshow/other video links from a site.</p><blockquote><p>bonus tip:<br> save these links into <code>batch.txt</code>, install <code>yt-dlp</code>,<br> run <code>yt-dlp -a batch.txt --remux-video mp4</code><br> you&#39;ve sucessfully downloaded all of the links</p></blockquote><h2 id="example-3-array-more-complex" tabindex="-1">example 3: array (more complex) <a class="header-anchor" href="#example-3-array-more-complex" aria-label="Permalink to &quot;example 3: array (more complex)&quot;">​</a></h2><p>you don&#39;t need to completely understand the following example, just see that you can chain a lot of powerful transformations together like this.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">certs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> initialArray</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">country</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">iso_3166_1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">certifications</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">release_dates</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">country</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> certs</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">...new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#F07178;">([ </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">certifications</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">c</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">certification</span><span style="color:#F07178;">) ])]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">c</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cert</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> cert</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">certs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> )</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;font-style:italic;">country</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">certs</span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">country</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">cert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> certs[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/KraXen72/imdb-fetch" target="_blank" rel="noreferrer">source</a></p><ol><li><code>initialArray</code> is mapped =, transforming an array of objects into something simpler (<code>{country: string, certs: string[]}</code>) <ol><li>the stuff it returns first spreads an array into a set and then the set back into an array. This is an effective method of removing duplicates</li><li><code>.filter(c =&gt; c !== &quot;&quot;)</code> just removes empty elements</li></ol></li><li>all countries which don&#39;t have any certifications are filtered out</li><li>cast <code>certs[0]</code> to <code>cert</code></li></ol><h2 id="one-last-caveat" tabindex="-1">one last caveat <a class="header-anchor" href="#one-last-caveat" aria-label="Permalink to &quot;one last caveat&quot;">​</a></h2><ul><li>avoid doing unnecessary array iterations with <code>map</code>, <code>filter</code>, <code>reduce</code> etc.</li><li>instead of, for example, <code>array.map(i =&gt; i).map(i =&gt; i).map(i =&gt; i).map(i =&gt; i)</code>, try to combine it into one <code>.map(...)</code> where possible.</li><li>different types of mutations after each other, or repeated mutation that depend on previous ones are fine 👍</li></ul>`,16),p=[e];function t(r,c,i,y,D,A){return n(),a("div",null,p)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
