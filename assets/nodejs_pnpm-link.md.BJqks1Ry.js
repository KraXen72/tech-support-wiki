import{_ as e,o as a,c as i,R as t}from"./chunks/framework.A-t1OoWf.js";const m=JSON.parse('{"title":"pnpm link","description":"","frontmatter":{"title":"pnpm link"},"headers":[],"relativePath":"nodejs/pnpm-link.md","filePath":"nodejs/pnpm-link.md","lastUpdated":1703609043000}'),o={name:"nodejs/pnpm-link.md"},n=t('<h1 id="pnpm-link" tabindex="-1">pnpm link <a class="header-anchor" href="#pnpm-link" aria-label="Permalink to &quot;pnpm link&quot;">​</a></h1><p>The docs page for the <code>pnpm link</code> command does a poor job of explaining it. Here&#39;s my attempt at understanding the very useful command <code>pnpm link</code> is.</p><p>Full documentation on <a href="https://pnpm.io/cli/link" target="_blank" rel="noreferrer">pnpm.io</a></p><h2 id="preface" tabindex="-1">preface <a class="header-anchor" href="#preface" aria-label="Permalink to &quot;preface&quot;">​</a></h2><p>This command is used to link a local copy of a package to another project, so you can get instant changes reflected in the other project, without publishing the package to npm or going through github.</p><blockquote><p>For super small, one/two-time modifications, check out <a href="https://pnpm.io/cli/patch" target="_blank" rel="noreferrer">pnpm patch</a>. It is easier, faster, and might be what you&#39;re looking for. However, if you want to, contribute your changes of the package back to your repo, or are developing 2 packages at the same time (library + project), <code>pnpm link</code> is likely the right answer.</p></blockquote><blockquote><p>If you&#39;re developing more packages in an ecosystem, consider using a <a href="https://pnpm.io/workspaces" target="_blank" rel="noreferrer">pnpm monorepo</a>. It is better for larger projects</p></blockquote><h2 id="the-example" tabindex="-1">the example <a class="header-anchor" href="#the-example" aria-label="Permalink to &quot;the example&quot;">​</a></h2><p>In my example, I am going to:</p><ul><li>link my fork of <code>sveltekit-adapter-iis</code>, in <code>D:/coding/svelte/fork-sveltekit-adapter-iis</code></li><li>into my project <code>pursiny-sveltekit</code>, in <code>D:/coding/svelte/pursiny-sveltekit</code></li></ul><h2 id="the-linked-package" tabindex="-1">the linked package <a class="header-anchor" href="#the-linked-package" aria-label="Permalink to &quot;the linked package&quot;">​</a></h2><p>cd into <code>D:/coding/svelte/fork-sveltekit-adapter-iis</code>, and run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span></span></code></pre></div><p>This makes it available to the current global pnpm store The <code>name</code> attribute in this package&#39;s <code>package.json</code> is <code>sveltekit-adapter-iis</code></p><h2 id="the-consumer" tabindex="-1">the consumer <a class="header-anchor" href="#the-consumer" aria-label="Permalink to &quot;the consumer&quot;">​</a></h2><p>cd into <code>D:/coding/svelte/pursiny-sveltekit</code>,</p><blockquote><p>Make sure to remove all previously installed packages with the same name beforehand with <code>pnpm rm &lt;package name&gt;</code>, like <code>pnpm rm sveltekit-adapter-iis</code></p></blockquote><p>and run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sveltekit-adapter-iis</span></span></code></pre></div><p>now it will be linked</p><h2 id="appearing-in-package-json" tabindex="-1">appearing in package.json <a class="header-anchor" href="#appearing-in-package-json" aria-label="Permalink to &quot;appearing in package.json&quot;">​</a></h2><p>What&#39;s really confusing is that after a package is sucessfully linked, it does not show up as a dependecny in <code>package.json</code>. It still works, but for ease of mind or other reasons you might want to add it to <code>package.json</code>.</p><h3 id="using-a-github-link" tabindex="-1">using a github link <a class="header-anchor" href="#using-a-github-link" aria-label="Permalink to &quot;using a github link&quot;">​</a></h3><p>If you add the pacakge like this: <code>pnpm add -D github:KraXen72/sveltekit-adapter-iis</code>, while it is linked, the link will have precedence over github, but others can install the dependency from github. <a href="https://pnpm.io/cli/add#install-from-git-repository" target="_blank" rel="noreferrer">More info</a></p><h3 id="explicitly-showing-it-is-linked" tabindex="-1">explicitly showing it is linked <a class="header-anchor" href="#explicitly-showing-it-is-linked" aria-label="Permalink to &quot;explicitly showing it is linked&quot;">​</a></h3><p>running <code>pnpm add -D ../fork-sveltekit-adapter-iis</code> or <code>pnpm add -D D:\\coding\\svelte\\fork-sveltekit-adapter-iis</code> will create the pnpm link, and add it to <code>package.json</code>. <a href="https://pnpm.io/cli/add#install-from-local-file-system" target="_blank" rel="noreferrer">More info</a></p>',26),s=[n];function p(l,r,c,d,h,k){return a(),i("div",null,s)}const u=e(o,[["render",p]]);export{m as __pageData,u as default};
