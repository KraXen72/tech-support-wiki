import{_ as s,c as e,o as a,a as n}from"./app.4602495e.js";const m=JSON.parse('{"title":"palindrome checker in regex","description":"","frontmatter":{"title":"palindrome checker in regex"},"headers":[{"level":2,"title":"feasible implementation (optimized)","slug":"feasible-implementation-optimized","link":"#feasible-implementation-optimized","children":[]},{"level":2,"title":"js + regex palindrome checker example","slug":"js-regex-palindrome-checker-example","link":"#js-regex-palindrome-checker-example","children":[]}],"relativePath":"regex/fixed-length-palindrome.md"}'),l={name:"regex/fixed-length-palindrome.md"},o=n(`<h1 id="palindromes-with-regex" tabindex="-1">palindromes with regex <a class="header-anchor" href="#palindromes-with-regex" aria-hidden="true">#</a></h1><p>many say it is impossible to make a regex to match a palindrome - while it&#39;s certainly impossible to make a unversal one that works for every word length, as long as you know the desired length, it is pretty easy.<br><strong>example for 7 word palindrome:</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">(.)(.)(.)(.)\\3\\2\\1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>it uses capture groups =&gt; <code>()</code> and references to them =&gt; <code>\\1</code> to make sure the word is a palindrome</p><h2 id="feasible-implementation-optimized" tabindex="-1">feasible implementation (optimized) <a class="header-anchor" href="#feasible-implementation-optimized" aria-hidden="true">#</a></h2><p>if you have a text with whitepace and words, and you are not using pure regex (you&#39;re using regex in combination with a language like js or python/whatever else), you can do this:</p><ol><li>find the longest word out of the text (slice the text into words, sort by length)</li><li>generate regexes from 2 - longest word</li><li>either join them into one big regex like <a href="https://medium.com/analytics-vidhya/coding-the-impossible-palindrome-detector-with-a-regular-expressions-cd76bc23b89b" target="_blank" rel="noreferrer">this article</a> does, or just loop through all words &amp; match each word with it&#39;s appropriate regex.</li></ol><h2 id="js-regex-palindrome-checker-example" tabindex="-1">js + regex palindrome checker example <a class="header-anchor" href="#js-regex-palindrome-checker-example" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">palindrome</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cleaned</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/[^</span><span style="color:#C3E88D;">A-Za-z0-9</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">]/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLowerCase</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">evilCleaned</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cleaned</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reverse</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cleaned</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">evilCleaned</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">palindrome</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A man, a plan, a canal. Panama</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// =&gt; true</span></span>
<span class="line"></span></code></pre></div><p>author: me</p>`,10),p=[o];function t(r,c,i,y,d,F){return a(),e("div",null,p)}const D=s(l,[["render",t]]);export{m as __pageData,D as default};
