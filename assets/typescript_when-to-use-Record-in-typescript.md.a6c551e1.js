import{_ as e,c as t,o,a as c}from"./app.722da2f3.js";const l=JSON.parse('{"title":"when to use Record in typescript","description":"","frontmatter":{"title":"when to use Record in typescript"},"headers":[],"relativePath":"typescript/when-to-use-Record-in-typescript.md"}'),r={name:"typescript/when-to-use-Record-in-typescript.md"},s=c('<h1 id="when-to-use-record-in-typescript" tabindex="-1">when to use <code>Record</code> in typescript <a class="header-anchor" href="#when-to-use-record-in-typescript" aria-hidden="true">#</a></h1><p>to quote WaterNinja101 from svelte discord:</p><blockquote><p><code>Object.keys</code> is defined to return a <code>string[]</code></p></blockquote><blockquote><p>typescript doesn&#39;t care where that <code>string[]</code> came from, so when you iterate over it, it goes &quot;hey, you can&#39;t use any string to access a property of this object&quot;</p></blockquote><blockquote><p>a <code>Record</code> type specifically says &quot;you can use any string to access a property on this object&quot;</p></blockquote>',5),n=[s];function i(a,p,d,u,_,h){return o(),t("div",null,n)}const f=e(r,[["render",i]]);export{l as __pageData,f as default};
