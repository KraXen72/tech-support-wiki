import{_ as s,o as i,c as a,R as e,a9 as t}from"./chunks/framework.QTPdkqON.js";const g=JSON.parse('{"title":"tailwindcss on windows without a bundler","description":"","frontmatter":{"title":"tailwindcss on windows without a bundler"},"headers":[],"relativePath":"webdev/tailwind-windows-no-bundler.md","filePath":"webdev/tailwind-windows-no-bundler.md","lastUpdated":1701128943000}'),n={name:"webdev/tailwind-windows-no-bundler.md"},l=e(`<h1 id="quick-quide-how-to-use-tailwind-css-without-a-bundler" tabindex="-1">Quick quide how to use tailwind css without a bundler <a class="header-anchor" href="#quick-quide-how-to-use-tailwind-css-without-a-bundler" aria-label="Permalink to &quot;Quick quide how to use tailwind css without a bundler&quot;">​</a></h1><p>This guide is primarily for windows. To use tailwindcss without a bundler, we will be using the <code>tailwindcss</code> cli. I will show you two ways to install it.</p><h2 id="the-quick-dirty-way" tabindex="-1">The quick &amp; dirty way <a class="header-anchor" href="#the-quick-dirty-way" aria-label="Permalink to &quot;The quick &amp; dirty way&quot;">​</a></h2><ol><li>Go to <a href="https://github.com/tailwindlabs/tailwindcss/releases" target="_blank" rel="noreferrer">tailwindcss/releases</a> on github</li><li>Download <code>tailwindcss-windows-x64.exe</code></li><li>put it into your project directory</li></ol><h3 id="notes" tabindex="-1">notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;notes&quot;">​</a></h3><ul><li>You will have to either put it in <code>PATH</code> manually, or reference the exe file</li><li>If you want to reference the exe file, rename it for sanity <ul><li>So you can do something like <code>&gt; tailwind.exe --config=...</code></li></ul></li></ul><h2 id="the-real-hackertm-way" tabindex="-1">The Real Hacker™ way <a class="header-anchor" href="#the-real-hackertm-way" aria-label="Permalink to &quot;The Real Hacker™ way&quot;">​</a></h2><ol><li>Install <a href="https://scoop.sh" target="_blank" rel="noreferrer">scoop package manager</a></li><li><code>&gt; scoop install main/tailwindcss</code></li><li>Now it&#39;s in <code>PATH</code> &amp; supports auto-updating through scoop</li></ol><h2 id="create-a-config-file" tabindex="-1">Create a config file <a class="header-anchor" href="#create-a-config-file" aria-label="Permalink to &quot;Create a config file&quot;">​</a></h2><p>Just like you would normally, create a <code>tailwind.config.js</code> file.<br> below is an example of one</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&#39;tailwindcss&#39;).Config}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content: [ </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// all the paths you want to watch and recompile on</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;./assets/style.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;./index.php&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;./rezervacia.php&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  theme: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    extend: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		colors: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// you can add custom colors here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			bbg: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#E4E2E0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			btext: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#525B64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			baux: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#617391&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			btextcol: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#FFFFFF&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			btextcolhl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#DDDDDD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			btextcolhov: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#111111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			btextcolhovhl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#999999&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fontFamily: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&#39;roboto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Roboto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;system-ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&#39;patua&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Patua One&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;system-ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://tailwindcss.com/docs/configuration" target="_blank" rel="noreferrer">full tailwindcss config documentation</a></p><h2 id="running-the-cli" tabindex="-1">Running the cli <a class="header-anchor" href="#running-the-cli" aria-label="Permalink to &quot;Running the cli&quot;">​</a></h2><p>To run the cli, do the following</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tailwindcss -c tailwind.config.js -w -o assets/tailwind-out.css -m</span></span></code></pre></div><blockquote><p>If you installed it as an exe, put it in the same folder and instead of <code>tailwind</code>, run <code>tailwind.exe</code> or whatever you named it</p></blockquote><p>Let&#39;s break down the flags:</p><ul><li><code>-c</code> = config file</li><li><code>-w</code> = watch mode, automatically re-compile on changes to the tracked files</li><li><code>-o</code> = output file. make sure to import this in your site, <strong>not</strong> the file you write your @apply and other tailwind things</li><li><code>-m</code> = minify. optional. makes the css minified/condensed</li></ul><h2 id="creating-a-start-scripts" tabindex="-1">Creating a start scripts <a class="header-anchor" href="#creating-a-start-scripts" aria-label="Permalink to &quot;Creating a start scripts&quot;">​</a></h2><p>You can create a simple <code>tailwind-dev.bat</code> script, just copy the above command into it, save as all files and add the <code>.bat</code> extension before hitting <code>Save</code></p><p>Now you don&#39;t need to type the command every time</p><h2 id="seeing-the-css-refresh-instantly-in-the-browser" tabindex="-1">Seeing the css refresh instantly in the browser <a class="header-anchor" href="#seeing-the-css-refresh-instantly-in-the-browser" aria-label="Permalink to &quot;Seeing the css refresh instantly in the browser&quot;">​</a></h2><p>Automatic re-compilation of tailwind =&gt; css is nice, but you know what would be even nicer? Yeah, hot reloading (so you don&#39;t need to refresh the page manually, like a caveman).</p><p>I&#39;ll show you how to set up very easy live css reloading with VSCode, since that&#39;s what you are probably using anyway.</p><ul><li>If you don&#39;t know what vs code is, <a href="https://code.visualstudio.com" target="_blank" rel="noreferrer">read the page and download it</a>.</li><li>In the off chance you are using something more advanced like vim or emacs, you can do a simple <code>vite .</code> in the directory to serve the files, i guess. or something more eccentric &amp; less reliable.</li></ul><h3 id="install-the-live-server-five-server-extension-by-yannick" tabindex="-1">Install the <code>Live Server (Five Server)</code> extension by <code>Yannick</code> <a class="header-anchor" href="#install-the-live-server-five-server-extension-by-yannick" aria-label="Permalink to &quot;Install the \`Live Server (Five Server)\` extension by \`Yannick\`&quot;">​</a></h3><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=yandeu.five-server" target="_blank" rel="noreferrer">marketplace link</a>, id: <code>yandeu.five-server</code></li></ul><p>then, click the <code>Go Live</code> button at the bottom of your status bar in vscode: <img src="`+t+`" alt="go live"></p><p>happy live-reloading! the future is <em>now</em></p><h3 id="troubleshooting-some-error-about-php" tabindex="-1">Troubleshooting: Some error about PHP <a class="header-anchor" href="#troubleshooting-some-error-about-php" aria-label="Permalink to &quot;Troubleshooting: Some error about PHP&quot;">​</a></h3><p>if you get some error about php path, download PHP</p><ul><li><code>scoop install php</code> or from <a href="https://windows.php.net/download#php-8.3" target="_blank" rel="noreferrer">here</a> =&gt; x64 thread safe zip</li></ul><p>and create a <code>fiveserver.config.js</code> in your project directory:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// or whatever your path is</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	php: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Users</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Nex</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scoop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">current</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">php.exe&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>should work™</p>`,35),h=[l];function o(r,p,d,k,c,u){return i(),a("div",null,h)}const y=s(n,[["render",o]]);export{g as __pageData,y as default};
