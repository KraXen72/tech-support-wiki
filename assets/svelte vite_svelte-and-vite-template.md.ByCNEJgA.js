import{_ as e,c as t,o as s,a4 as i}from"./chunks/framework.FwfRAdxb.js";const u=JSON.parse('{"title":"svelte and vite template","description":"","frontmatter":{"title":"svelte and vite template"},"headers":[],"relativePath":"svelte vite/svelte-and-vite-template.md","filePath":"svelte vite/svelte-and-vite-template.md","lastUpdated":1672013221000}'),a={name:"svelte vite/svelte-and-vite-template.md"},l=i(`<h1 id="svelte-and-vite-template" tabindex="-1">svelte and vite template <a class="header-anchor" href="#svelte-and-vite-template" aria-label="Permalink to &quot;svelte and vite template&quot;">​</a></h1><h3 id="update" tabindex="-1">UPDATE: <a class="header-anchor" href="#update" aria-label="Permalink to &quot;UPDATE:&quot;">​</a></h3><p>(tbh probably just follow whatever instructions are given to you on <a href="https://vitejs.dev" target="_blank" rel="noreferrer">https://vitejs.dev</a>)</p><p>you can just use the cli to init a new svelte + vite project.</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vanilla js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm create vite@latest my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svelte</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template svelte</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// typescript</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm create vite@latest my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">svelte</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template svelte</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ts</span></span></code></pre></div><p>more about it here: <a href="https://vitejs.dev/guide/#scaffolding-your-first-vite-project" target="_blank" rel="noreferrer">https://vitejs.dev/guide/#scaffolding-your-first-vite-project</a></p><h3 id="old-way" tabindex="-1">OLD WAY <a class="header-anchor" href="#old-way" aria-label="Permalink to &quot;OLD WAY&quot;">​</a></h3><p>for applications requiring also server side stuff, use <a href="https://kit.svelte.dev/" target="_blank" rel="noreferrer">https://kit.svelte.dev</a></p><p>for just simple plain vite + svelte or vite + svelte + ts go <a href="https://vitejs.dev/guide/#trying-vite-online" target="_blank" rel="noreferrer">https://vitejs.dev/guide/#trying-vite-online</a> and click on one of the links</p><p>you’ll be redirected to stackblitz: connect your github acocunt, publish the new project to a repo, then make it private if you want</p><p>you can now git clone the repo, <code>npm install</code></p><p>for developing use <code>npm run dev</code> , use <code>npm run preview</code> to preview the built app and <code>npm run build</code> to compile the svelte code into bundles</p><p>(this also automatically packs all npm modules you used)</p>`,13),n=[l];function p(r,h,o,d,k,v){return s(),t("div",null,n)}const g=e(a,[["render",p]]);export{u as __pageData,g as default};
