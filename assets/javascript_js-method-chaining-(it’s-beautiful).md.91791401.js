import{_ as s,c as a,o as n,a as l}from"./app.b1d6bb7f.js";const F=JSON.parse('{"title":"js method chaining","description":"","frontmatter":{"title":"js method chaining"},"headers":[],"relativePath":"javascript/js-method-chaining-(it’s-beautiful).md"}'),o={name:"javascript/js-method-chaining-(it’s-beautiful).md"},p=l(`<h1 id="js-method-chaining-it-s-beautiful" tabindex="-1">js method chaining (it’s beautiful) <a class="header-anchor" href="#js-method-chaining-it-s-beautiful" aria-hidden="true">#</a></h1><p><a href="https://schier.co/blog/method-chaining-in-javascript" target="_blank" rel="noreferrer">https://schier.co/blog/method-chaining-in-javascript</a><br> example:</p><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> prependName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fullpath</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(filename</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??filename</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(basedDir</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??basedDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(slash)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">part</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??basedDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">??filename</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(part))</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(pslash)</span></span>
<span class="line"></span></code></pre></div>`,3),e=[p];function t(c,r,i,D,A,y){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{F as __pageData,h as default};
